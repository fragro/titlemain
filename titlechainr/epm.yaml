jobs:
- name: lot_name
  job:
    set:
      val: "BABYLON_5"

- name: deployGSFactory
  job:
    deploy:
      contract: ChainManagerFactory.sol
      instance: all
      wait: true

- name: deployRFactory
  job:
    deploy:
      contract: RegistryFactory.sol
      instance: all
      wait: true

- name: createGSContract
  job:
    call:
      destination: $deployGSFactory
      data: create
      abi: ChainManagerFactory
      wait: true

- name: createRContract
  job:
    call:
      destination: $deployRFactory
      data: create
      abi: RegistryFactory
      wait: true

- name:  getGSAddr
  job:
    query-contract:
      destination: $deployGSFactory
      data: getLast
      abi: ChainManagerFactory

- name:  getRAddr
  job:
    query-contract:
      destination: $deployRFactory
      data: getLast
      abi: RegistryFactory

- name: getNFAddr
  job:
    query-contract:
      destination: $deployRFactory
      data: getNodeFactory
      abi: RegistryFactory

- name: initTitleChain
  job:
    call:
      destination: $createGSContract
      data: initTitleChain $lot_name
      abi: ChainManager
      wait: true

# - name: setStorage
#   job:
#     call:
#       destination: $createGSContract
#       data: set $setStorageBase
#       abi: GSContract
#       wait: true

# - name: queryStorage
#   job:
#     query-contract:
#       destination: $createGSContract
#       data: get
#       abi: GSContract

# - name: assertStorage
#   job:
#     assert:
#       key: $queryStorage
#       relation: eq
#       val: $setStorageBase

